server.port = 8090
spring.aop.proxy-target-class=true

# DataSource settings: set here your own configurations for the database 
# connection. In this example we have "recursos_humanos" as database name and 
# "root" as username and password.
spring.datasource.url=jdbc:mysql://localhost:3306/dv-ds-20201c-g1?serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = update

#spring.jpa.hibernate.ddl-auto=create
#spring.jpa.hibernate.ddl-auto=none

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect


# Enable all endpoints
management.endpoints.web.exposure.include=*

# App info
info.app.name = @project.name@
info.app.groupId = @project.groupId@
info.app.artifactId = @project.artifactId@
info.app.version = @project.version@

